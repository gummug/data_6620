{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: |\n",
        "  | Surveys, Conjoint, \n",
        "  | and Multilevel Models\n",
        "author: \"IS 5150/6110\"\n",
        "title-slide-attributes:\n",
        "  data-background-color: \"#486790\"\n",
        "format: \n",
        "  revealjs:\n",
        "    theme: marc.scss     # Modified simple theme.\n",
        "    slide-number: c/t    # Numbered slides current/total.\n",
        "    self-contained: true # Required to display ../figures/.\n",
        "highlight-style: github\n",
        "execute:\n",
        "  eval: false\n",
        "  echo: true\n",
        "---\n",
        "\n",
        "\n",
        "# Surveys\n",
        "\n",
        "## An essential data collection method\n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "::: {.fragment fragment-index=1 .fade-left}\n",
        "*Advantages*\n",
        ":::\n",
        "\n",
        "::: {.incremental}\n",
        "- Easy to administer to a large number of respondents\n",
        "- Standardized questions provide a basis for comparison\n",
        "- Structured data simplifies analysis\n",
        "- Straightforward for respondents\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "::: {.fragment fragment-index=2 .fade-left}\n",
        "*Disadvantages*\n",
        ":::\n",
        "\n",
        "::: {.incremental}\n",
        "- Getting the right sample can be difficult and expensive\n",
        "- Stuctured questions may unduly constrain respondents\n",
        "- Sensitive questions can be challenging to answer\n",
        "- Proper wording can be difficult\n",
        ":::\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## What makes a good survey?\n",
        "\n",
        "::: {.incremental}\n",
        "- Language and phrasing needs to fit the audience\n",
        "- Wording and structure should encourage completion\n",
        "- Make it easy to check any display or skip patterns\n",
        "- Language should be brief, clear, and conversational\n",
        "- Questions need to be answerable by the audience\n",
        "- Be careful about assumed knowledge and being ambiguous\n",
        "- Avoid double-barreled and leading/loaded questions\n",
        ":::\n",
        "\n",
        "## Survey tips\n",
        "\n",
        "::: {.incremental}\n",
        "- Use projection for potentially loaded questions\n",
        "- Make rating scales simple and anchored\n",
        "- Use display and skip patterns to funnel respondents to relevant questions\n",
        "- Include \"Don't know\" or \"None of the above\" options\n",
        "- Include an \"Other, please specify\" open-ended option when you may not have exhaustive response categories\n",
        "- Consider randomizing question options to minimize order bias\n",
        "- Consider when to use forced choice\n",
        ":::\n",
        "\n",
        "## All measurements come with error\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/survey-error.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## Ask easy questions first, difficult questions last\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/survey-funnel.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "# Conjoint\n",
        "\n",
        "## {auto-animate=true}\n",
        "\n",
        "![](../figures/choice-task.png){fig-align=\"center\"}\n",
        "\n",
        "## {auto-animate=true}\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](../figures/choice-task.png){fig-align=\"center\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "::: {.incremental}\n",
        "- Products are defined by attributes, each with a number of levels\n",
        "- Respondents choose from among product alternatives\n",
        "- **Respondent-level preferences** are estimated for each attribute level\n",
        "- Preference estimates are used to make counterfactual predictions in a simulated market\n",
        "- **Market simulators** inform new product development, pricing, product line optimization, etc.\n",
        ":::\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## {auto-animate=true}\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](../figures/choice-task.png){fig-align=\"center\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "$$\n",
        "U_{hj} = \\beta_{h1}x_{j1} + \\beta_{h2}x_{j2} + \\cdots + \\beta_{hk}x_{jk} + \\epsilon_{hj}\n",
        "$$\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## {visibility=\"uncounted\"}\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](../figures/choice-task.png){fig-align=\"center\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "$$\n",
        "\\color{grey}{U_{hj} = \\color{black}{\\beta_{h1}}x_{j1} + \\color{black}{\\beta_{h2}}x_{j2} + \\cdots + \\color{black}{\\beta_{hk}}x_{jk} + \\epsilon_{hj}}\n",
        "$$\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## {visibility=\"uncounted\"}\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](../figures/choice-task.png){fig-align=\"center\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "$$\n",
        "\\color{grey}{U_{hj} = \\beta_{h1}\\color{black}{x_{j1}} + \\beta_{h2}\\color{black}{x_{j2}} + \\cdots + \\beta_{hk}\\color{black}{x_{jk}} + \\epsilon_{hj}}\n",
        "$$\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## Discrete Choice\n",
        "\n",
        "For each respondent $h$ and choice task $t$ with $j$ alternatives and $k$ attribute levels:\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "y_{ht} & = \\text{argmax}(pr(y_{ht})), \\ \\text{s.t.} \\ y_{ht} \\in \\left\\{1, 2, \\cdots, J \\right\\} \\\\[2mm]\n",
        "p(y_{htj}) & = {\\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right) \\over \\sum_{j=1}^J \\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right)} \\\\[2mm]\n",
        "\\color{grey}{B} & \\hspace{3mm} \\color{grey}{\\sim MVN\\left(\\gamma, \\Sigma \\right)} \\\\[2mm]\n",
        "\\color{grey}{\\gamma} & \\hspace{3mm} \\color{grey}{\\sim \\textit{Normal}(0, 1)} \\\\[2mm]\n",
        "\\color{grey}{\\Sigma} & \\hspace{3mm} \\color{grey}{= \\text{diag}(\\tau) \\ \\Omega \\ \\text{diag}(\\tau)} \\\\[2mm]\n",
        "\\color{grey}{\\Omega} & \\hspace{3mm} \\color{grey}{\\sim LKJ(1)} \\\\[2mm]\n",
        "\\color{grey}{\\tau} & \\hspace{3mm} \\color{grey}{\\sim \\textit{Half-Normal}(1, 2)}\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "## Discrete Choice {visibility=\"uncounted\"}\n",
        "\n",
        "For each respondent $h$ and choice task $t$ with $j$ alternatives and $k$ attribute levels:\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "\\color{grey}{y_{ht}} & \\hspace{3mm} \\color{grey}{= \\text{argmax}(pr(y_{ht})), \\ \\text{s.t.} \\ y_{ht} \\in \\left\\{1, 2, \\cdots, J \\right\\}} \\\\[2mm]\n",
        "\\color{grey}{p(y_{htj})} & \\hspace{3mm} \\color{grey}{= {\\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right) \\over \\sum_{j=1}^J \\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right)}} \\\\[2mm]\n",
        "B & \\sim MVN\\left(\\gamma, \\Sigma \\right) \\\\[2mm]\n",
        "\\color{grey}{\\gamma} & \\hspace{3mm} \\color{grey}{\\sim \\textit{Normal}(0, 1)} \\\\[2mm]\n",
        "\\color{grey}{\\Sigma} & \\hspace{3mm} \\color{grey}{= \\text{diag}(\\tau) \\ \\Omega \\ \\text{diag}(\\tau)} \\\\[2mm]\n",
        "\\color{grey}{\\Omega} & \\hspace{3mm} \\color{grey}{\\sim LKJ(1)} \\\\[2mm]\n",
        "\\color{grey}{\\tau} & \\hspace{3mm} \\color{grey}{\\sim \\textit{Half-Normal}(1, 2)}\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "## \n",
        "\n",
        "::: {.v-center}\n",
        "\n",
        "$$\n",
        "\\LARGE{p(\\theta | X) \\propto p(X | \\theta) \\ p(\\theta)}\n",
        "$$\n",
        ":::\n",
        "\n",
        "## \n",
        "\n",
        "::: {.v-center}\n",
        "\n",
        "$$\n",
        "\\LARGE{p(\\theta, \\alpha | X) \\propto p(X | \\theta) \\ \\color{red}{p(\\theta | \\alpha)} \\ p(\\alpha)}\n",
        "$$\n",
        ":::\n",
        "\n",
        "## Discrete Choice {visibility=\"uncounted\"}\n",
        "\n",
        "For each respondent $h$ and choice task $t$ with $j$ alternatives and $k$ attribute levels:\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "\\color{grey}{y_{ht}} & \\hspace{3mm} \\color{grey}{= \\text{argmax}(pr(y_{ht})), \\ \\text{s.t.} \\ y_{ht} \\in \\left\\{1, 2, \\cdots, J \\right\\}} \\\\[2mm]\n",
        "\\color{grey}{p(y_{htj})} & \\hspace{3mm} \\color{grey}{= {\\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right) \\over \\sum_{j=1}^J \\exp\\left(\\beta_{h1}x_{tj1} + \\beta_{h2}x_{tj2} + \\cdots + \\beta_{hk}x_{tjk} \\right)}} \\\\[2mm]\n",
        "\\color{grey}{B} & \\hspace{3mm} \\color{grey}{\\sim MVN\\left(\\gamma, \\Sigma \\right)} \\\\[2mm]\n",
        "\\gamma & \\sim \\textit{Normal}(0, 1) \\\\[2mm]\n",
        "\\Sigma & = \\text{diag}(\\tau) \\ \\Omega \\ \\text{diag}(\\tau) \\\\[2mm]\n",
        "\\Omega & \\sim LKJ(1) \\\\[2mm]\n",
        "\\tau & \\sim \\textit{Half-Normal}(1, 2)\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "# [discover.sawtoothsoftware.com](http://discover.sawtoothsoftware.com)\n",
        "\n",
        "# Multilevel Models\n",
        "\n",
        "##\n",
        "\n",
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/meme_multilevel-names.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n",
        "\n",
        "::: {.v-center}\n",
        "\n",
        "$$\n",
        "\\LARGE{p(\\theta, \\alpha | X) \\propto p(X | \\theta) \\ p(\\theta | \\alpha) \\ p(\\alpha)}\n",
        "$$\n",
        ":::\n",
        "\n",
        "# *Adaptive* Shrinkage\n",
        "\n",
        "## \n",
        "\n",
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/fox.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n"
      ],
      "id": "7763db01"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import polars as pl\n",
        "import pymc as pm\n",
        "import arviz as az\n",
        "\n",
        "# Import (standardized) fox data.\n",
        "foxes = pl.read_csv('../data/foxes.csv')\n",
        "\n",
        "# Separate predictors and the outcome.\n",
        "X = foxes.select(pl.col(['avgfood', 'groupsize'])).to_numpy()\n",
        "y = foxes.select(pl.col('weight')).to_numpy().flatten()\n",
        "\n",
        "# Estimate the direct causal effect of avgfood on weight.\n",
        "with pm.Model() as foxes_model:\n",
        "  # Data.\n",
        "  X_data = pm.Data('X_data', X)\n",
        "  y_data = pm.Data('y_data', y)\n",
        "\n",
        "  # Priors.\n",
        "  alpha = pm.Normal('alpha', mu = 0, sigma = 0.2)\n",
        "  beta = pm.Normal('beta', mu = 0, sigma = 0.5, shape = 2)\n",
        "  sigma = pm.Exponential('sigma', lam = 1)\n",
        "\n",
        "  # Likelihood.\n",
        "  mu = alpha + X_data @ beta\n",
        "  y_obs = pm.Normal('y_obs', mu = mu, sigma = sigma, observed = y_data)\n",
        "\n",
        "# Sample.\n",
        "with foxes_model:\n",
        "  draws = pm.sample()"
      ],
      "id": "76ffa6aa",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## \n"
      ],
      "id": "01c0f43b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Visualize marginal posteriors.\n",
        "az.plot_forest(draws, var_names=['beta'], combined = True, hdi_prob=0.95)"
      ],
      "id": "bc2da3c1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/intro-to-pymc_plot-02.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n"
      ],
      "id": "b8da4d94"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: true\n",
        "import numpy as np\n",
        "import polars as pl\n",
        "import bambi as bmb\n",
        "import arviz as az\n",
        "\n",
        "# Import foxes data.\n",
        "foxes = pl.read_csv('../data/foxes.csv')\n",
        "\n",
        "# Use Bambi to estimate the direct causal effect of avgfood on weight.\n",
        "bambi_model_01 = bmb.Model('weight ~ avgfood + groupsize', foxes.to_pandas())\n",
        "bambi_model_01"
      ],
      "id": "9b71056d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## \n"
      ],
      "id": "678fcc13"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Calls pm.sample().\n",
        "bambi_fit_01 = bambi_model_01.fit()\n",
        "az.plot_trace(bambi_fit_01, compact = False)"
      ],
      "id": "6ee36fa7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/multilevel-models_plot-01.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n"
      ],
      "id": "bbc90430"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Visualize marginal posteriors.\n",
        "az.plot_forest(bambi_fit_01, var_names = ['avgfood', 'groupsize'], combined = True, hdi_prob = 0.95)"
      ],
      "id": "743247d4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/multilevel-models_plot-02.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n"
      ],
      "id": "52650ba3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: true\n",
        "# Use Bambi to estimate the direct causal effect of avgfood on weight by group.\n",
        "bambi_model_02 = bmb.Model('weight ~ (avgfood|group) + (groupsize|group)', foxes.to_pandas(), noncentered = True)\n",
        "bambi_model_02"
      ],
      "id": "fa2546a3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## {.scrollable}\n"
      ],
      "id": "979427f5"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Calls pm.sample().\n",
        "bambi_fit_02 = bambi_model_02.fit()\n",
        "az.plot_trace(bambi_fit_02, compact = False)"
      ],
      "id": "ea2df534",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/multilevel-models_plot-03.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "## \n"
      ],
      "id": "9fb5b36c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Visualize marginal posteriors.\n",
        "az.plot_forest(bambi_fit_02, var_names = ['avgfood|group', 'groupsize|group'], combined = True, hdi_prob = 0.95)"
      ],
      "id": "f87ba4f6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::: {.columns .v-center}\n",
        "::: {.column width=\"100%\"}\n",
        "![](../figures/multilevel-models_plot-04.png){fig-align=\"center\"}\n",
        ":::\n",
        "::::"
      ],
      "id": "ace8ed95"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/a02342917/Library/Python/3.9/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}